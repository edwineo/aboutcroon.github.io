(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{374:function(t,a,s){"use strict";s.r(a);var e=s(45),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git使用规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git使用规范"}},[t._v("#")]),t._v(" Git使用规范")]),t._v(" "),s("h1",{attrs:{id:"_1-分支命名与保护"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-分支命名与保护"}},[t._v("#")]),t._v(" 1. 分支命名与保护")]),t._v(" "),s("h2",{attrs:{id:"_1-1-分支命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-分支命名"}},[t._v("#")]),t._v(" 1.1 分支命名")]),t._v(" "),s("h3",{attrs:{id:"_1-1-1-master-主分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-master-主分支"}},[t._v("#")]),t._v(" 1.1.1 master（主分支）")]),t._v(" "),s("ul",[s("li",[t._v("主分支，线上环境")]),t._v(" "),s("li",[t._v("该分支为只读分支，只能从 "),s("code",[t._v("test")]),t._v(" 分支合并，不能直接在此分支上进行修改")]),t._v(" "),s("li",[t._v("所有在 "),s("code",[t._v("master")]),t._v(" 分支的推送应该打标签做记录，方便追溯")])]),t._v(" "),s("h3",{attrs:{id:"_1-1-2-dev-主开发分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-dev-主开发分支"}},[t._v("#")]),t._v(" 1.1.2 dev（主开发分支）")]),t._v(" "),s("ul",[s("li",[t._v("主开发分支，基于 "),s("code",[t._v("master")]),t._v(" 分支克隆")]),t._v(" "),s("li",[t._v("该分支为只读分支，只能从其他分支（"),s("code",[t._v("feature/hotfix")]),t._v("）合并，不能直接在此分支上进行修改")]),t._v(" "),s("li",[t._v("包含所有要发布到下一个 "),s("code",[t._v("test")]),t._v(" 分支的代码")]),t._v(" "),s("li",[t._v("feature 功能分支开发完成时，合并到 "),s("code",[t._v("dev")]),t._v(" 分支")])]),t._v(" "),s("h3",{attrs:{id:"_1-1-3-release-预发布分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-release-预发布分支"}},[t._v("#")]),t._v(" 1.1.3 release（预发布分支）")]),t._v(" "),s("ul",[s("li",[t._v("预发布分支，基于 "),s("code",[t._v("dev")]),t._v(" 分支克隆")]),t._v(" "),s("li",[t._v("当有一组 feature 开发完成，首先会合并到 dev 分支，进入提测时，会基于 dev 分支创建 release 分支进行测试")]),t._v(" "),s("li",[t._v("如果测试过程中若存在 bug 需要修复，则直接由开发者在 release 分支修复并提交，修复完成之后合并到 dev 分支")])]),t._v(" "),s("h3",{attrs:{id:"_1-1-4-feature-功能开发分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-4-feature-功能开发分支"}},[t._v("#")]),t._v(" 1.1.4 feature （功能开发分支）")]),t._v(" "),s("ul",[s("li",[t._v("功能开发分支，基于 "),s("code",[t._v("dev")]),t._v(" 分支克隆")]),t._v(" "),s("li",[t._v("开发新功能时，需要从 "),s("code",[t._v("dev")]),t._v(" 分支拉取 "),s("code",[t._v("feature")]),t._v(" 分支，分支命名为 feature-功能名称/模块名称")]),t._v(" "),s("li",[t._v("开发完成后，将代码合并到 "),s("code",[t._v("dev")]),t._v(" 分支，并删除该分支")])]),t._v(" "),s("h3",{attrs:{id:"_1-1-5-hotfix-bug-修复分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-5-hotfix-bug-修复分支"}},[t._v("#")]),t._v(" 1.1.5 hotfix（bug 修复分支）")]),t._v(" "),s("ul",[s("li",[t._v("补丁分支，基于 "),s("code",[t._v("master")]),t._v(" 分支克隆，主要用于对线上版本进行 bug 修复")]),t._v(" "),s("li",[t._v("命名为 hotfix-bug模块名称，修复完毕后合并到 "),s("code",[t._v("dev")]),t._v(" 分支")]),t._v(" "),s("li",[t._v("属于临时分支，补丁修复上线后可删除该分支")])]),t._v(" "),s("h2",{attrs:{id:"_1-2-分支保护"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-分支保护"}},[t._v("#")]),t._v(" 1.2 分支保护")]),t._v(" "),s("p",[t._v("设置 "),s("code",[t._v("master")]),t._v(" 分支、"),s("code",[t._v("test")]),t._v(" 分支、"),s("code",[t._v("dev")]),t._v(" 分支只能通过 merge request 的方式合并，不可以直接 push 代码。")]),t._v(" "),s("p",[t._v("由负责人进行 "),s("code",[t._v("code review")]),t._v(" 之后再合并到相应分支。")]),t._v(" "),s("h1",{attrs:{id:"_2-commit-message-规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-commit-message-规范"}},[t._v("#")]),t._v(" 2. Commit message 规范")]),t._v(" "),s("p",[t._v("参考于 Angular 定义的 commit 基本格式")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/angular/angular/blob/master/CONTRIBUTING.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文档"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/angular/angular/commits/master",target:"_blank",rel:"noopener noreferrer"}},[t._v("具体示例"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"_2-1-基本格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-基本格式"}},[t._v("#")]),t._v(" 2.1 基本格式")]),t._v(" "),s("p",[t._v("基本格式如下：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("("),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("): "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("subject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("footer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("第一行的 "),s("code",[t._v("Header")]),t._v(" 部分为必填，"),s("code",[t._v("Body")]),t._v(" 和 "),s("code",[t._v("Footer")]),t._v(" 部分为可选。注意 Header，Body，Footer 中间有空白行分割。")]),t._v(" "),s("h2",{attrs:{id:"_2-2-header"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-header"}},[t._v("#")]),t._v(" 2.2 Header")]),t._v(" "),s("p",[t._v("Header 部分只有一行，包括三个字段："),s("code",[t._v("type")]),t._v("(必需)、"),s("code",[t._v("scope")]),t._v("(可选)、"),s("code",[t._v("subject")]),t._v("(必需)。")]),t._v(" "),s("h3",{attrs:{id:"type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" type：")]),t._v(" "),s("p",[s("code",[t._v("type")]),t._v(" 用于说明 commit 的类别，只允许使用以下 7 个标识")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("feat")]),t._v("：新功能（feature）")]),t._v(" "),s("li",[s("code",[t._v("fix")]),t._v("：修补 bug")]),t._v(" "),s("li",[s("code",[t._v("docs")]),t._v("：文档（documentation）")]),t._v(" "),s("li",[s("code",[t._v("style")]),t._v("：格式（不影响代码运行的变动）")]),t._v(" "),s("li",[s("code",[t._v("refactor")]),t._v("：重构（不是新增的功能，也不是修改 bug 的代码变动）")]),t._v(" "),s("li",[s("code",[t._v("test")]),t._v("：增加测试")]),t._v(" "),s("li",[s("code",[t._v("chore")]),t._v("：构建过程或辅助工具的变动")])]),t._v(" "),s("p",[t._v("通常 feat 和 fix 会被放入 changelog（变更日志） 中，其他类型则不会。")]),t._v(" "),s("h3",{attrs:{id:"scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scope"}},[t._v("#")]),t._v(" scope：")]),t._v(" "),s("p",[s("code",[t._v("scope")]),t._v(" 用于说明 commit 影响的范围，为可选值。通常是文件、路径、功能等")]),t._v(" "),s("h3",{attrs:{id:"subject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subject"}},[t._v("#")]),t._v(" subject：")]),t._v(" "),s("p",[s("code",[t._v("subject")]),t._v(" 是 commit 目的的简短描述，不超过 50 个字符，一般用英文表示")]),t._v(" "),s("ul",[s("li",[t._v("以动词开头，使用第一人称现在时，比如 "),s("code",[t._v("change")]),t._v("，而不是 "),s("code",[t._v("changed")]),t._v(" 或 "),s("code",[t._v("changes")])]),t._v(" "),s("li",[t._v("第一个字母小写")]),t._v(" "),s("li",[t._v("结尾不加句号 (.)")])]),t._v(" "),s("h2",{attrs:{id:"_2-3-body"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-body"}},[t._v("#")]),t._v(" 2.3 Body")]),t._v(" "),s("p",[s("code",[t._v("Body")]),t._v(" 部分是对本次 commit 的详细描述，为可选项，可以分成多行（换行用 \\n），示例：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("More detailed explanatory text, if necessary. \nFurther paragraphs come after blank lines. \n\n- Bullet points are okay, too \n- Use a hanging indent\n")])])]),s("h2",{attrs:{id:"_2-4-footer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-footer"}},[t._v("#")]),t._v(" 2.4 Footer")]),t._v(" "),s("p",[s("code",[t._v("Footer")]),t._v(" 部分只用于两种情况：")]),t._v(" "),s("h3",{attrs:{id:"不兼容的变动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不兼容的变动"}},[t._v("#")]),t._v(" 不兼容的变动")]),t._v(" "),s("p",[t._v("如果当前代码与上一个版本不兼容，则 Footer 部分以 "),s("code",[t._v("BREAKING CHANGE")]),t._v(" 开头，后面加上对变动的描述、变动理由以及迁移方法。")]),t._v(" "),s("h3",{attrs:{id:"关闭问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关闭问题"}},[t._v("#")]),t._v(" 关闭问题")]),t._v(" "),s("p",[t._v("如果当前 commit 针对某个问题，那么可以在 Footer 部分关闭这个问题：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Closes #234\n")])])]),s("p",[t._v("也可以一次关闭多个问题：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Closes #123, #245, #992\n")])])]),s("h1",{attrs:{id:"_3-自动化工具处理-commit-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-自动化工具处理-commit-message"}},[t._v("#")]),t._v(" 3. 自动化工具处理 commit message")]),t._v(" "),s("p",[t._v("如 commit message 规则所示，若我们手写上述的 commit 基本格式很明显并不方便，而且还有出错的可能，那么可以使用自动化工具生成上述规范的commit message。")]),t._v(" "),s("h2",{attrs:{id:"_3-1-commitizen"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-commitizen"}},[t._v("#")]),t._v(" 3.1 Commitizen")]),t._v(" "),s("p",[t._v("我们可以使用 "),s("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitizen"),s("OutboundLink")],1),t._v(" 工具来规范化 git commit 的 message。")]),t._v(" "),s("p",[t._v("commitizen 本质上是一个通用的规范化 git commit 的框架，可以通过各种 "),s("a",{attrs:{href:"https://github.com/commitizen/cz-cli#adapters",target:"_blank",rel:"noopener noreferrer"}},[t._v("Adapters"),s("OutboundLink")],1),t._v(" 来格式化对应的格式。我们上述使用的规则是 Angular 的 commit 格式，那么需要额外安装 cz-conventional-changelog 这个 Adapter。目前 commitizen 实现的 Adaptor 有 Angular、ESlint、mapbox、Jira 等等，我们这里只使用 cz-conventional-changelog 来实现 Angular 的 commit 格式。")]),t._v(" "),s("h2",{attrs:{id:"_3-2-具体使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-具体使用"}},[t._v("#")]),t._v(" 3.2 具体使用")]),t._v(" "),s("p",[t._v("全局安装 commitizen")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v("npm install commitizen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("g\n")])])]),s("p",[t._v("使用 commitizen 命令初始化当前工程")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v("commitizen init cz"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("conventional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("changelog "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dev\n")])])]),s("p",[t._v("执行完毕后，在 package.json 文件中的 devDependencies 配置中多了 cz-conventional-changelog 依赖，也增加了以下配置段")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"config"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commitizen"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"path"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./node_modules/cz-conventional-changelog"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("此时，使用 "),s("code",[t._v("git cz")]),t._v(" 命令来替换 git commit 命令即可。")]),t._v(" "),s("h1",{attrs:{id:"_4-git-hook-设置-commit-message-校验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-git-hook-设置-commit-message-校验"}},[t._v("#")]),t._v(" 4. Git hook 设置 commit message 校验")]),t._v(" "),s("p",[t._v("我们可以在 git commit 的 hook 中加入 "),s("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint"),s("OutboundLink")],1),t._v(" 校验，这样可以使不符合 commit 规范的本地提交无法完成。")]),t._v(" "),s("h2",{attrs:{id:"_4-1-具体使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-具体使用"}},[t._v("#")]),t._v(" 4.1 具体使用")]),t._v(" "),s("p",[t._v("在项目中安装 husky，commitlint 相关依赖")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v("npm install husky @commitlint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("conventional @commitlint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("cli "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dev\n")])])]),s("p",[t._v("在 package.json 文件中添加 husky 的 git hook 配置")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit-msg"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -x @commitlint/config-conventional -E HUSKY_GIT_PARAMS"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("此时，如果提交的 commit message 不符合规范，该 hook 就会报错。")]),t._v(" "),s("h2",{attrs:{id:"_4-2-配置规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-配置规则"}},[t._v("#")]),t._v(" 4.2 配置规则")]),t._v(" "),s("p",[t._v("我们可以生成 "),s("code",[t._v("commitlint.config.js")]),t._v(" 或 "),s("code",[t._v(".commitlintrc.js")]),t._v(" 文件来配置自定义的规则：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("echo \"module.exports = {extends: ['@commitlint/config-conventional']}\" > commitlint.config.js\n")])])]),s("p",[t._v("commitlint.config.js 文件的配置如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@commitlint/config-conventional"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  rules"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type-enum'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'upd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fix'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refactor'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chore'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'revert'")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type-case'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type-empty'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'scope-empty'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'scope-case'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'subject-full-stop'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'subject-case'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'header-max-length'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("rules 由 name 和配置数组组成，如：\" 'name': [0, 'always', 72] \"，数组中第一位为 level，可选 0，1，2，0 为 disable，1 为 warning，2 为 error；第二位为应用与否，可选 always 或 never；第三位为该 rule 的值。")]),t._v(" "),s("p",[t._v("更多配置规则可参照 commitlint 官方网站："),s("a",{attrs:{href:"https://commitlint.js.org/#/reference-rules",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint rules"),s("OutboundLink")],1)]),t._v(" "),s("h1",{attrs:{id:"_5-git-hook-设置-eslint-校验及修复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-git-hook-设置-eslint-校验及修复"}},[t._v("#")]),t._v(" 5. Git hook 设置 eslint 校验及修复")]),t._v(" "),s("p",[t._v("我们也可以在 git commit 的 hook 中加入 "),s("a",{attrs:{href:"https://github.com/okonet/lint-staged#readme",target:"_blank",rel:"noopener noreferrer"}},[t._v("lint-staged"),s("OutboundLink")],1),t._v(" 校验，用来对 git 暂存的文件执行 lint 修复。")]),t._v(" "),s("h2",{attrs:{id:"_5-1-具体使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-具体使用"}},[t._v("#")]),t._v(" 5.1 具体使用")]),t._v(" "),s("p",[t._v("安装 husky、lint-staged 和 eslint 依赖")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v("npm install husky lint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("staged eslint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dev\n")])])]),s("p",[t._v("在 package.json 文件中增加 husky 和 lint-staged 配置")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-commit"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint-staged"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"src/**"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --fix"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_5-2-配置规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-配置规则"}},[t._v("#")]),t._v(" 5.2 配置规则")]),t._v(" "),s("p",[t._v("上述 lint 修复会根据 .eslintrc.js 文件中的配置进行。")]),t._v(" "),s("p",[t._v("eslint 配置规则详见："),s("a",{attrs:{href:"http://10.10.1.21:8050/display/FRON/eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);